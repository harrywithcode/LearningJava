class Solution {
    public int arrayNesting(int[] nums) {
        int max = 0;
        for (int i = 0; i < nums.length; i++) {
            int size = 0;
            for (int k = i; nums[k] >= 0; size++) {
                int ak = nums[k];
                nums[k] = -1;
                k = ak;
            }
            max = Math.max(max, size);
        }
        return max;
    }
}




///TLE
class Solution {
    public int arrayNesting(int[] nums) {
        int max = 0;
        for (int i = 0; i < nums.length; i++) {
            Set<Integer> set = new HashSet<>();
            int item = nums[i];
            while (!set.contains(item) && set.size() <= nums.length) {
                set.add(item);
                item = nums[item];
            }
            max = Math.max(set.size(), max);
        }
        return max;
    }
}
