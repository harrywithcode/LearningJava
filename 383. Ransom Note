public class Solution {
    public boolean canConstruct(String ransomNote, String magazine) {
        int []arr = new int [26];
        for(int i = 0; i < magazine.length(); i ++){
            arr[magazine.charAt(i) - 'a']++;
        }
        for(int i = 0; i < ransomNote.length(); i++){
            if(--arr[ransomNote.charAt(i) - 'a'] < 0){
                return false;
            }
        }
        return true;
    }
}

//////////////slower
public class Solution {
    public boolean canConstruct(String ransomNote, String magazine) {
        Map<Character, Integer> map = new HashMap<>();
        for(char c:magazine.toCharArray()){
            int newCount = map.getOrDefault(c,0)+1;
            map.put(c,newCount);
        }
        for(char c:ransomNote.toCharArray()){
            int newCount = map.getOrDefault(c,0)-1;
            if(newCount<0){
                return false;
            }
            map.put(c,newCount);
        }
        return true;
    }
}
////////////没成功，以后明白了再改一改
public class Solution {
    public boolean canConstruct(String ransomNote, String magazine) {
        Map<Character,Integer>map=new HashMap<>();
        for(char c:magazine.toCharArray()){
            map.put(c,map.get(c)+1);
        }
        for(char c:ransomNote.toCharArray()){
            if(map.get(c)<0){
                return false;
            }
            map.put(c,map.get(c)-1);
        }
        return true;
    }
}
