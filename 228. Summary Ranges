class Solution {
    public List<String> summaryRanges(int[] nums) {
        List<String> result = new ArrayList<>();
        
        for (int i = 0; i < nums.length; i++) {
            int start = nums[i];
            
            while (i < nums.length - 1 && nums[i + 1] - nums[i] == 1) {
                i++;
            }
            if (start == nums[i]) {
                result.add(String.valueOf(start));
            }
            if (start != nums[i]) {
                result.add(start + "->" + nums[i]);
            }
            //i = end;
        }
        return result;
    }
}

///////////Faster ////////////////////
class Solution {
    public List<String> summaryRanges(int[] nums) {
        List<String> result = new ArrayList<>();
        if (nums.length == 0) {
            return result;
        }
        
        int start = nums[0];
        
        
        for (int i = 1; i < nums.length; i++) {
            if (nums[i] == nums[i - 1] + 1) {
                continue;
            } else {
                result.add(helper(start, nums[i - 1]));
                start = nums[i];
            }
        }
        result.add(helper(start, nums[nums.length - 1]));
        return result;
    }
    private String helper(int start, int end) {
        if (start == end) {
            return start + "";
        } else {
            return start + "->" + end;
        }
    }
}




////////////////////////TLE////////////////////////////

class Solution {
    public List<String> summaryRanges(int[] nums) {
        List<String> result = new ArrayList<>();
        
        for (int i = 0; i < nums.length; i++) {
            int start = i;
            int end = start;
            
            while (i < nums.length - 1 && nums[i + 1] - nums[i] == 1) {
                end++;
            }
            if (start == end) {
                result.add(String.valueOf(nums[start]));
            }
            if (start != end) {
                result.add(nums[start] + "->" + nums[end]);
            }
            i = end;
        }
        return result;
    }
}
