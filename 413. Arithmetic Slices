class Solution {
    public int numberOfArithmeticSlices(int[] A) {
        int sum = 0;
        int length = 0;
        
        if (A.length < 3) {
            return 0;
        }
        for (int i = 0; i < A.length - 2; i++) {
            if (A[i + 1] - A[i] == A[i + 2] - A[i + 1]) {
                length++; //新的3个数的组合成立，所以+1
                sum += length; //由于我们的新i + 2满足，所以这个数字串的最后又加了一个新成员i + 2.之前所以的数组串组合都可以再延长一位。
                //之前有多少个数字串呢？之前有sum个数字串了，这些数字串的结尾都没有新成员。
                //新成员又为我们带来了多少个新的数字串呢？新带来了length个，这些数字串都是以新成员i + 2结尾的
            }
            else {
                length = 0;
            }
        }
        return sum;
    }
}

http://blog.csdn.net/u012985132/article/details/52970960?locationNum=6&fps=1

//
class Solution {
    public int numberOfArithmeticSlices(int[] A) {
        int sum = 0;
        int length = 0;
        
        if (A.length < 3) {
            return 0;
        }
        for (int i = 0; i < A.length - 2; i++) {
            if (A[i + 1] - A[i] == A[i + 2] - A[i + 1]) {
                length++;
                sum += length;
            }
            else {
                length = 0;
            }
        }
        return sum;
    }
}
