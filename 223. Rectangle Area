public class Solution {
    public int computeArea(int A, int B, int C, int D, int E, int F, int G, int H) {
        if(C<=E || G<=A){
            return (D-B)*(C-A)+(H-F)*(G-E);
        }
        else if(H<=B ||D<=F){
            return (D-B)*(C-A)+(H-F)*(G-E);
        }
            return (D-B)*(C-A)+(H-F)*(G-E)-(Math.min(C,G)-Math.max(A,E))*(Math.min(D,H)-Math.max(B,F));
    }
}
//faster
public class Solution {
    
       public int computeArea(int A, int B, int C, int D, int E, int F, int G, int H) {
    int left = Math.max(A,E), right = Math.max(Math.min(C,G), left);
    int bottom = Math.max(B,F), top = Math.max(Math.min(D,H), bottom);
    return (C-A)*(D-B) - (right-left)*(top-bottom) + (G-E)*(H-F);
}
    
}
