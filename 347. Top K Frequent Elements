//bucket sort. Be careful of bucket size

class Solution {
    public List<Integer> topKFrequent(int[] nums, int k) {
        List<Integer> result = new ArrayList<>();
        Map<Integer, Integer> map = new HashMap<>();
        List<Integer>[] bucket = new List[nums.length + 1];
        
        for (int n : nums) {
		    map.put(n, map.getOrDefault(n, 0) + 1);
	    }
        
        for (int key : map.keySet()) {
            int freq = map.get(key); // freq begins from 1, max is nums.length
            
            if (bucket[freq] == null) {
                bucket[freq] = new ArrayList<>();
            }
            bucket[freq].add(key);
        }
        for (int i = bucket.length - 1; i > 0 && result.size() < k; i--) {
            if (bucket[i] != null) {
                result.addAll(bucket[i]);
            }
        }
        return result;
    }
}
