class Solution {
    public List<Integer> spiralOrder(int[][] matrix) {
        List<Integer> result = new ArrayList<>();
        
        if (matrix.length == 0) {
            return result;
        }
        
        int bottomRow = matrix.length;
        int rightCol = matrix[0].length;
        
        int topRow = 0;
        int leftCol = 0;
        
        while (topRow < bottomRow && leftCol < rightCol) {
            for (int index = leftCol; index < rightCol; index++) {
                result.add(matrix[topRow][index]);
            }
            topRow++;
            
            for (int index = topRow; index < bottomRow; index++) {
                result.add(matrix[index][rightCol - 1]);
            }
            rightCol--;
            
            if (topRow <= bottomRow - 1) {
                for (int index = rightCol - 1; index >= leftCol; index--) {
                    result.add(matrix[bottomRow - 1][index]);
                }
                bottomRow--;
            }
            
            if (leftCol <= rightCol - 1) {
                for (int index = bottomRow - 1; index >= topRow; index--) {
                    result.add(matrix[index][leftCol]);
                }
                leftCol++;
            }
        }
        return result;
    }
}
