class Solution {
    public List<List<Integer>> combine(int n, int k) {
        List<List<Integer>> result = new ArrayList<>();
        backTrack(result, new ArrayList<>(), n, k, 1); //range is from 1 to n, not start from 0
        return result;
    }
    private void backTrack(List<List<Integer>> result, List<Integer> line, int n, int k, int start) {
        if (k == 0) { //All numbers are used.
            result.add(new ArrayList<>(line));
            return;
        }
        for (int i = start; i <= n; i++) {
            line.add(i);
            backTrack(result, line, n, k - 1, i + 1);
            line.remove(line.size() - 1);
        }
    }
}
//看到return all possible combinations，就要想到back tracking
//和216题非常像
