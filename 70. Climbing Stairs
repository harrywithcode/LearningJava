public class Solution {//斐波那契
    public int climbStairs(int n) {
        if(n==0 || n==1 || n==2){
            return n;
        }
        int[] result = new int[n+1];
        result[0] = 1;
        result[1] = 1;
        for ( int i = 2; i <= n ; i++){
            result[i] = result[i-1]+result[i-2];//当你迈到这一步时，你前一步有两种情况，第一种情况是你迈了一步迈到现在这步。
            //另一种情况是你迈了两步迈到现在。这两种情况对应的各自情况相加。
        }
        return result[n];
    }
}

//第二种情况，不需要定义数组
public class Solution {
    public int climbStairs(int n) {
        int a = 1, b = 1;
        for (int i = 2; i <= n; i++) {
            b = a + b;
            a = b - a;
        }
        return b;
    }
}
//第三种，大同小异，暂时没琢磨，先写上
public int climbStairs(int n) {
    int[] dp = {0, 1, 2};
    for(int i = 3; i <= n; i++) {
        dp[i%3] = dp[(i-1)%3] + dp[(i-2)%3];
    }
    return dp[n%3];
}
