/**
 * Definition for binary tree with next pointer.
 * public class TreeLinkNode {
 *     int val;
 *     TreeLinkNode left, right, next;
 *     TreeLinkNode(int x) { val = x; }
 * }
 */
public class Solution {
    public void connect(TreeLinkNode root) {
        if (root == null) {
            return;
        }
        Queue<TreeLinkNode> queue = new LinkedList<>();
        queue.offer(root);
        queue.offer(null);
        
        while (!queue.isEmpty()) {
            if (queue.peek() == null) {
                queue.poll();
                if (!queue.isEmpty()) {
                    queue.offer(null);
                }
            } else {
                TreeLinkNode current = queue.poll();
                current.next = queue.peek();
                
                if (current.left != null) {
                    queue.offer(current.left);
                }
                if (current.right != null) {
                    queue.offer(current.right);
                }
            }           
        }
    }
}
